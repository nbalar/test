//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_AboutUs_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "AboutU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.AboutU), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_AboutUsDetails_AboutUs", "AboutU", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.AboutU), "AboutUsDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.AboutUsDetail), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_Pricing_Master_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "Pricing_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.Pricing_Master), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_Services_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.Service), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_Slider_Master_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "Slider_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.Slider_Master), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_Testimonials_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "Testimonial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.Testimonial), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_PricingDetails_Pricing_Master", "Pricing_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Pricing_Master), "PricingDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.PricingDetail), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_Slider_Details_Slider_Master", "Slider_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Slider_Master), "Slider_Details", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.Slider_Details), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_DataCenter_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "DataCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.DataCenter), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_DataCenterDetails_DataCenter", "DataCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.DataCenter), "DataCenterDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.DataCenterDetail), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_CustomerTestimonails_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "CustomerTestimonail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.CustomerTestimonail), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_WhyWe_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "WhyWe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.WhyWe), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_Backup_Master_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "Backup_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.Backup_Master), true)]
[assembly: EdmRelationshipAttribute("cms_venomitModel", "FK_ContactDetails_Domain_Master", "Domain_Master", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VenomitIT.DAL.Domain_Master), "ContactDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VenomitIT.DAL.ContactDetail), true)]

#endregion

namespace VenomitIT.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class cms_venomitEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new cms_venomitEntities object using the connection string found in the 'cms_venomitEntities' section of the application configuration file.
        /// </summary>
        public cms_venomitEntities() : base("name=cms_venomitEntities", "cms_venomitEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new cms_venomitEntities object.
        /// </summary>
        public cms_venomitEntities(string connectionString) : base(connectionString, "cms_venomitEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new cms_venomitEntities object.
        /// </summary>
        public cms_venomitEntities(EntityConnection connection) : base(connection, "cms_venomitEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AboutU> AboutUs
        {
            get
            {
                if ((_AboutUs == null))
                {
                    _AboutUs = base.CreateObjectSet<AboutU>("AboutUs");
                }
                return _AboutUs;
            }
        }
        private ObjectSet<AboutU> _AboutUs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AboutUsDetail> AboutUsDetails
        {
            get
            {
                if ((_AboutUsDetails == null))
                {
                    _AboutUsDetails = base.CreateObjectSet<AboutUsDetail>("AboutUsDetails");
                }
                return _AboutUsDetails;
            }
        }
        private ObjectSet<AboutUsDetail> _AboutUsDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Domain_Master> Domain_Master
        {
            get
            {
                if ((_Domain_Master == null))
                {
                    _Domain_Master = base.CreateObjectSet<Domain_Master>("Domain_Master");
                }
                return _Domain_Master;
            }
        }
        private ObjectSet<Domain_Master> _Domain_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pricing_Master> Pricing_Master
        {
            get
            {
                if ((_Pricing_Master == null))
                {
                    _Pricing_Master = base.CreateObjectSet<Pricing_Master>("Pricing_Master");
                }
                return _Pricing_Master;
            }
        }
        private ObjectSet<Pricing_Master> _Pricing_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PricingDetail> PricingDetails
        {
            get
            {
                if ((_PricingDetails == null))
                {
                    _PricingDetails = base.CreateObjectSet<PricingDetail>("PricingDetails");
                }
                return _PricingDetails;
            }
        }
        private ObjectSet<PricingDetail> _PricingDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Slider_Details> Slider_Details
        {
            get
            {
                if ((_Slider_Details == null))
                {
                    _Slider_Details = base.CreateObjectSet<Slider_Details>("Slider_Details");
                }
                return _Slider_Details;
            }
        }
        private ObjectSet<Slider_Details> _Slider_Details;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Slider_Master> Slider_Master
        {
            get
            {
                if ((_Slider_Master == null))
                {
                    _Slider_Master = base.CreateObjectSet<Slider_Master>("Slider_Master");
                }
                return _Slider_Master;
            }
        }
        private ObjectSet<Slider_Master> _Slider_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Testimonial> Testimonials
        {
            get
            {
                if ((_Testimonials == null))
                {
                    _Testimonials = base.CreateObjectSet<Testimonial>("Testimonials");
                }
                return _Testimonials;
            }
        }
        private ObjectSet<Testimonial> _Testimonials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User_Master> User_Master
        {
            get
            {
                if ((_User_Master == null))
                {
                    _User_Master = base.CreateObjectSet<User_Master>("User_Master");
                }
                return _User_Master;
            }
        }
        private ObjectSet<User_Master> _User_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataCenter> DataCenters
        {
            get
            {
                if ((_DataCenters == null))
                {
                    _DataCenters = base.CreateObjectSet<DataCenter>("DataCenters");
                }
                return _DataCenters;
            }
        }
        private ObjectSet<DataCenter> _DataCenters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataCenterDetail> DataCenterDetails
        {
            get
            {
                if ((_DataCenterDetails == null))
                {
                    _DataCenterDetails = base.CreateObjectSet<DataCenterDetail>("DataCenterDetails");
                }
                return _DataCenterDetails;
            }
        }
        private ObjectSet<DataCenterDetail> _DataCenterDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerTestimonail> CustomerTestimonails
        {
            get
            {
                if ((_CustomerTestimonails == null))
                {
                    _CustomerTestimonails = base.CreateObjectSet<CustomerTestimonail>("CustomerTestimonails");
                }
                return _CustomerTestimonails;
            }
        }
        private ObjectSet<CustomerTestimonail> _CustomerTestimonails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WhyWe> WhyWes
        {
            get
            {
                if ((_WhyWes == null))
                {
                    _WhyWes = base.CreateObjectSet<WhyWe>("WhyWes");
                }
                return _WhyWes;
            }
        }
        private ObjectSet<WhyWe> _WhyWes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Backup_Master> Backup_Master
        {
            get
            {
                if ((_Backup_Master == null))
                {
                    _Backup_Master = base.CreateObjectSet<Backup_Master>("Backup_Master");
                }
                return _Backup_Master;
            }
        }
        private ObjectSet<Backup_Master> _Backup_Master;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactDetail> ContactDetails
        {
            get
            {
                if ((_ContactDetails == null))
                {
                    _ContactDetails = base.CreateObjectSet<ContactDetail>("ContactDetails");
                }
                return _ContactDetails;
            }
        }
        private ObjectSet<ContactDetail> _ContactDetails;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AboutUs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAboutUs(AboutU aboutU)
        {
            base.AddObject("AboutUs", aboutU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AboutUsDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAboutUsDetails(AboutUsDetail aboutUsDetail)
        {
            base.AddObject("AboutUsDetails", aboutUsDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Domain_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDomain_Master(Domain_Master domain_Master)
        {
            base.AddObject("Domain_Master", domain_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pricing_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPricing_Master(Pricing_Master pricing_Master)
        {
            base.AddObject("Pricing_Master", pricing_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PricingDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPricingDetails(PricingDetail pricingDetail)
        {
            base.AddObject("PricingDetails", pricingDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Slider_Details EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSlider_Details(Slider_Details slider_Details)
        {
            base.AddObject("Slider_Details", slider_Details);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Slider_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSlider_Master(Slider_Master slider_Master)
        {
            base.AddObject("Slider_Master", slider_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Testimonials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestimonials(Testimonial testimonial)
        {
            base.AddObject("Testimonials", testimonial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser_Master(User_Master user_Master)
        {
            base.AddObject("User_Master", user_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataCenters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataCenters(DataCenter dataCenter)
        {
            base.AddObject("DataCenters", dataCenter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataCenterDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataCenterDetails(DataCenterDetail dataCenterDetail)
        {
            base.AddObject("DataCenterDetails", dataCenterDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerTestimonails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerTestimonails(CustomerTestimonail customerTestimonail)
        {
            base.AddObject("CustomerTestimonails", customerTestimonail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WhyWes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWhyWes(WhyWe whyWe)
        {
            base.AddObject("WhyWes", whyWe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Backup_Master EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBackup_Master(Backup_Master backup_Master)
        {
            base.AddObject("Backup_Master", backup_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactDetails(ContactDetail contactDetail)
        {
            base.AddObject("ContactDetails", contactDetail);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="AboutU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AboutU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AboutU object.
        /// </summary>
        /// <param name="aboutId">Initial value of the AboutId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static AboutU CreateAboutU(global::System.Int32 aboutId, global::System.Int32 domainId)
        {
            AboutU aboutU = new AboutU();
            aboutU.AboutId = aboutId;
            aboutU.DomainId = domainId;
            return aboutU;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AboutId
        {
            get
            {
                return _AboutId;
            }
            set
            {
                if (_AboutId != value)
                {
                    OnAboutIdChanging(value);
                    ReportPropertyChanging("AboutId");
                    _AboutId = StructuralObject.SetValidValue(value, "AboutId");
                    ReportPropertyChanged("AboutId");
                    OnAboutIdChanged();
                }
            }
        }
        private global::System.Int32 _AboutId;
        partial void OnAboutIdChanging(global::System.Int32 value);
        partial void OnAboutIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_AboutUs_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_AboutUs_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_AboutUs_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_AboutUs_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_AboutUs_Domain_Master", "Domain_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_AboutUsDetails_AboutUs", "AboutUsDetail")]
        public EntityCollection<AboutUsDetail> AboutUsDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AboutUsDetail>("cms_venomitModel.FK_AboutUsDetails_AboutUs", "AboutUsDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AboutUsDetail>("cms_venomitModel.FK_AboutUsDetails_AboutUs", "AboutUsDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="AboutUsDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AboutUsDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AboutUsDetail object.
        /// </summary>
        /// <param name="aboutDetailsId">Initial value of the AboutDetailsId property.</param>
        /// <param name="aboutId">Initial value of the AboutId property.</param>
        public static AboutUsDetail CreateAboutUsDetail(global::System.Int32 aboutDetailsId, global::System.Int32 aboutId)
        {
            AboutUsDetail aboutUsDetail = new AboutUsDetail();
            aboutUsDetail.AboutDetailsId = aboutDetailsId;
            aboutUsDetail.AboutId = aboutId;
            return aboutUsDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AboutDetailsId
        {
            get
            {
                return _AboutDetailsId;
            }
            set
            {
                if (_AboutDetailsId != value)
                {
                    OnAboutDetailsIdChanging(value);
                    ReportPropertyChanging("AboutDetailsId");
                    _AboutDetailsId = StructuralObject.SetValidValue(value, "AboutDetailsId");
                    ReportPropertyChanged("AboutDetailsId");
                    OnAboutDetailsIdChanged();
                }
            }
        }
        private global::System.Int32 _AboutDetailsId;
        partial void OnAboutDetailsIdChanging(global::System.Int32 value);
        partial void OnAboutDetailsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AboutId
        {
            get
            {
                return _AboutId;
            }
            set
            {
                OnAboutIdChanging(value);
                ReportPropertyChanging("AboutId");
                _AboutId = StructuralObject.SetValidValue(value, "AboutId");
                ReportPropertyChanged("AboutId");
                OnAboutIdChanged();
            }
        }
        private global::System.Int32 _AboutId;
        partial void OnAboutIdChanging(global::System.Int32 value);
        partial void OnAboutIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AboutImage
        {
            get
            {
                return _AboutImage;
            }
            set
            {
                OnAboutImageChanging(value);
                ReportPropertyChanging("AboutImage");
                _AboutImage = StructuralObject.SetValidValue(value, true, "AboutImage");
                ReportPropertyChanged("AboutImage");
                OnAboutImageChanged();
            }
        }
        private global::System.String _AboutImage;
        partial void OnAboutImageChanging(global::System.String value);
        partial void OnAboutImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_AboutUsDetails_AboutUs", "AboutU")]
        public AboutU AboutU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AboutU>("cms_venomitModel.FK_AboutUsDetails_AboutUs", "AboutU").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AboutU>("cms_venomitModel.FK_AboutUsDetails_AboutUs", "AboutU").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AboutU> AboutUReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AboutU>("cms_venomitModel.FK_AboutUsDetails_AboutUs", "AboutU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AboutU>("cms_venomitModel.FK_AboutUsDetails_AboutUs", "AboutU", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Backup_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Backup_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Backup_Master object.
        /// </summary>
        /// <param name="backupId">Initial value of the BackupId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static Backup_Master CreateBackup_Master(global::System.Int32 backupId, global::System.Int32 domainId)
        {
            Backup_Master backup_Master = new Backup_Master();
            backup_Master.BackupId = backupId;
            backup_Master.DomainId = domainId;
            return backup_Master;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BackupId
        {
            get
            {
                return _BackupId;
            }
            set
            {
                if (_BackupId != value)
                {
                    OnBackupIdChanging(value);
                    ReportPropertyChanging("BackupId");
                    _BackupId = StructuralObject.SetValidValue(value, "BackupId");
                    ReportPropertyChanged("BackupId");
                    OnBackupIdChanged();
                }
            }
        }
        private global::System.Int32 _BackupId;
        partial void OnBackupIdChanging(global::System.Int32 value);
        partial void OnBackupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackupImage
        {
            get
            {
                return _BackupImage;
            }
            set
            {
                OnBackupImageChanging(value);
                ReportPropertyChanging("BackupImage");
                _BackupImage = StructuralObject.SetValidValue(value, true, "BackupImage");
                ReportPropertyChanged("BackupImage");
                OnBackupImageChanged();
            }
        }
        private global::System.String _BackupImage;
        partial void OnBackupImageChanging(global::System.String value);
        partial void OnBackupImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Backup_Master_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Backup_Master_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Backup_Master_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Backup_Master_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_Backup_Master_Domain_Master", "Domain_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="ContactDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactDetail object.
        /// </summary>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static ContactDetail CreateContactDetail(global::System.Int32 contactId, global::System.Int32 domainId)
        {
            ContactDetail contactDetail = new ContactDetail();
            contactDetail.ContactId = contactId;
            contactDetail.DomainId = domainId;
            return contactDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                if (_ContactId != value)
                {
                    OnContactIdChanging(value);
                    ReportPropertyChanging("ContactId");
                    _ContactId = StructuralObject.SetValidValue(value, "ContactId");
                    ReportPropertyChanged("ContactId");
                    OnContactIdChanged();
                }
            }
        }
        private global::System.Int32 _ContactId;
        partial void OnContactIdChanging(global::System.Int32 value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_ContactDetails_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_ContactDetails_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_ContactDetails_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_ContactDetails_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_ContactDetails_Domain_Master", "Domain_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="CustomerTestimonail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerTestimonail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerTestimonail object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static CustomerTestimonail CreateCustomerTestimonail(global::System.Int32 customerId, global::System.Int32 domainId)
        {
            CustomerTestimonail customerTestimonail = new CustomerTestimonail();
            customerTestimonail.CustomerId = customerId;
            customerTestimonail.DomainId = domainId;
            return customerTestimonail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value, "CustomerId");
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerImage
        {
            get
            {
                return _CustomerImage;
            }
            set
            {
                OnCustomerImageChanging(value);
                ReportPropertyChanging("CustomerImage");
                _CustomerImage = StructuralObject.SetValidValue(value, true, "CustomerImage");
                ReportPropertyChanged("CustomerImage");
                OnCustomerImageChanged();
            }
        }
        private global::System.String _CustomerImage;
        partial void OnCustomerImageChanging(global::System.String value);
        partial void OnCustomerImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_CustomerTestimonails_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_CustomerTestimonails_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_CustomerTestimonails_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_CustomerTestimonails_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_CustomerTestimonails_Domain_Master", "Domain_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="DataCenter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataCenter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataCenter object.
        /// </summary>
        /// <param name="dataCenterId">Initial value of the DataCenterId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static DataCenter CreateDataCenter(global::System.Int32 dataCenterId, global::System.Int32 domainId)
        {
            DataCenter dataCenter = new DataCenter();
            dataCenter.DataCenterId = dataCenterId;
            dataCenter.DomainId = domainId;
            return dataCenter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataCenterId
        {
            get
            {
                return _DataCenterId;
            }
            set
            {
                if (_DataCenterId != value)
                {
                    OnDataCenterIdChanging(value);
                    ReportPropertyChanging("DataCenterId");
                    _DataCenterId = StructuralObject.SetValidValue(value, "DataCenterId");
                    ReportPropertyChanged("DataCenterId");
                    OnDataCenterIdChanged();
                }
            }
        }
        private global::System.Int32 _DataCenterId;
        partial void OnDataCenterIdChanging(global::System.Int32 value);
        partial void OnDataCenterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataCenterDescription
        {
            get
            {
                return _DataCenterDescription;
            }
            set
            {
                OnDataCenterDescriptionChanging(value);
                ReportPropertyChanging("DataCenterDescription");
                _DataCenterDescription = StructuralObject.SetValidValue(value, true, "DataCenterDescription");
                ReportPropertyChanged("DataCenterDescription");
                OnDataCenterDescriptionChanged();
            }
        }
        private global::System.String _DataCenterDescription;
        partial void OnDataCenterDescriptionChanging(global::System.String value);
        partial void OnDataCenterDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_DataCenter_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_DataCenter_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_DataCenter_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_DataCenter_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_DataCenter_Domain_Master", "Domain_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_DataCenterDetails_DataCenter", "DataCenterDetail")]
        public EntityCollection<DataCenterDetail> DataCenterDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataCenterDetail>("cms_venomitModel.FK_DataCenterDetails_DataCenter", "DataCenterDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataCenterDetail>("cms_venomitModel.FK_DataCenterDetails_DataCenter", "DataCenterDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="DataCenterDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataCenterDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataCenterDetail object.
        /// </summary>
        /// <param name="dataDetailId">Initial value of the DataDetailId property.</param>
        /// <param name="dataCenterId">Initial value of the DataCenterId property.</param>
        public static DataCenterDetail CreateDataCenterDetail(global::System.Int32 dataDetailId, global::System.Int32 dataCenterId)
        {
            DataCenterDetail dataCenterDetail = new DataCenterDetail();
            dataCenterDetail.DataDetailId = dataDetailId;
            dataCenterDetail.DataCenterId = dataCenterId;
            return dataCenterDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataDetailId
        {
            get
            {
                return _DataDetailId;
            }
            set
            {
                if (_DataDetailId != value)
                {
                    OnDataDetailIdChanging(value);
                    ReportPropertyChanging("DataDetailId");
                    _DataDetailId = StructuralObject.SetValidValue(value, "DataDetailId");
                    ReportPropertyChanged("DataDetailId");
                    OnDataDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _DataDetailId;
        partial void OnDataDetailIdChanging(global::System.Int32 value);
        partial void OnDataDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataCenterId
        {
            get
            {
                return _DataCenterId;
            }
            set
            {
                OnDataCenterIdChanging(value);
                ReportPropertyChanging("DataCenterId");
                _DataCenterId = StructuralObject.SetValidValue(value, "DataCenterId");
                ReportPropertyChanged("DataCenterId");
                OnDataCenterIdChanged();
            }
        }
        private global::System.Int32 _DataCenterId;
        partial void OnDataCenterIdChanging(global::System.Int32 value);
        partial void OnDataCenterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_DataCenterDetails_DataCenter", "DataCenter")]
        public DataCenter DataCenter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataCenter>("cms_venomitModel.FK_DataCenterDetails_DataCenter", "DataCenter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataCenter>("cms_venomitModel.FK_DataCenterDetails_DataCenter", "DataCenter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataCenter> DataCenterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataCenter>("cms_venomitModel.FK_DataCenterDetails_DataCenter", "DataCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataCenter>("cms_venomitModel.FK_DataCenterDetails_DataCenter", "DataCenter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Domain_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Domain_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Domain_Master object.
        /// </summary>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static Domain_Master CreateDomain_Master(global::System.Int32 domainId)
        {
            Domain_Master domain_Master = new Domain_Master();
            domain_Master.DomainId = domainId;
            return domain_Master;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                if (_DomainId != value)
                {
                    OnDomainIdChanging(value);
                    ReportPropertyChanging("DomainId");
                    _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                    ReportPropertyChanged("DomainId");
                    OnDomainIdChanged();
                }
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DomainName
        {
            get
            {
                return _DomainName;
            }
            set
            {
                OnDomainNameChanging(value);
                ReportPropertyChanging("DomainName");
                _DomainName = StructuralObject.SetValidValue(value, true, "DomainName");
                ReportPropertyChanged("DomainName");
                OnDomainNameChanged();
            }
        }
        private global::System.String _DomainName;
        partial void OnDomainNameChanging(global::System.String value);
        partial void OnDomainNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DomainURL
        {
            get
            {
                return _DomainURL;
            }
            set
            {
                OnDomainURLChanging(value);
                ReportPropertyChanging("DomainURL");
                _DomainURL = StructuralObject.SetValidValue(value, true, "DomainURL");
                ReportPropertyChanged("DomainURL");
                OnDomainURLChanged();
            }
        }
        private global::System.String _DomainURL;
        partial void OnDomainURLChanging(global::System.String value);
        partial void OnDomainURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_AboutUs_Domain_Master", "AboutU")]
        public EntityCollection<AboutU> AboutUs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AboutU>("cms_venomitModel.FK_AboutUs_Domain_Master", "AboutU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AboutU>("cms_venomitModel.FK_AboutUs_Domain_Master", "AboutU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Pricing_Master_Domain_Master", "Pricing_Master")]
        public EntityCollection<Pricing_Master> Pricing_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pricing_Master>("cms_venomitModel.FK_Pricing_Master_Domain_Master", "Pricing_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pricing_Master>("cms_venomitModel.FK_Pricing_Master_Domain_Master", "Pricing_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Services_Domain_Master", "Service")]
        public EntityCollection<Service> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("cms_venomitModel.FK_Services_Domain_Master", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("cms_venomitModel.FK_Services_Domain_Master", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Slider_Master_Domain_Master", "Slider_Master")]
        public EntityCollection<Slider_Master> Slider_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slider_Master>("cms_venomitModel.FK_Slider_Master_Domain_Master", "Slider_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slider_Master>("cms_venomitModel.FK_Slider_Master_Domain_Master", "Slider_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Testimonials_Domain_Master", "Testimonial")]
        public EntityCollection<Testimonial> Testimonials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Testimonial>("cms_venomitModel.FK_Testimonials_Domain_Master", "Testimonial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Testimonial>("cms_venomitModel.FK_Testimonials_Domain_Master", "Testimonial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_DataCenter_Domain_Master", "DataCenter")]
        public EntityCollection<DataCenter> DataCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataCenter>("cms_venomitModel.FK_DataCenter_Domain_Master", "DataCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataCenter>("cms_venomitModel.FK_DataCenter_Domain_Master", "DataCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_CustomerTestimonails_Domain_Master", "CustomerTestimonail")]
        public EntityCollection<CustomerTestimonail> CustomerTestimonails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerTestimonail>("cms_venomitModel.FK_CustomerTestimonails_Domain_Master", "CustomerTestimonail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerTestimonail>("cms_venomitModel.FK_CustomerTestimonails_Domain_Master", "CustomerTestimonail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_WhyWe_Domain_Master", "WhyWe")]
        public EntityCollection<WhyWe> WhyWes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WhyWe>("cms_venomitModel.FK_WhyWe_Domain_Master", "WhyWe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WhyWe>("cms_venomitModel.FK_WhyWe_Domain_Master", "WhyWe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Backup_Master_Domain_Master", "Backup_Master")]
        public EntityCollection<Backup_Master> Backup_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Backup_Master>("cms_venomitModel.FK_Backup_Master_Domain_Master", "Backup_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Backup_Master>("cms_venomitModel.FK_Backup_Master_Domain_Master", "Backup_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_ContactDetails_Domain_Master", "ContactDetail")]
        public EntityCollection<ContactDetail> ContactDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactDetail>("cms_venomitModel.FK_ContactDetails_Domain_Master", "ContactDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactDetail>("cms_venomitModel.FK_ContactDetails_Domain_Master", "ContactDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Pricing_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pricing_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pricing_Master object.
        /// </summary>
        /// <param name="pricingId">Initial value of the PricingId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static Pricing_Master CreatePricing_Master(global::System.Int32 pricingId, global::System.Int32 domainId)
        {
            Pricing_Master pricing_Master = new Pricing_Master();
            pricing_Master.PricingId = pricingId;
            pricing_Master.DomainId = domainId;
            return pricing_Master;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingId
        {
            get
            {
                return _PricingId;
            }
            set
            {
                if (_PricingId != value)
                {
                    OnPricingIdChanging(value);
                    ReportPropertyChanging("PricingId");
                    _PricingId = StructuralObject.SetValidValue(value, "PricingId");
                    ReportPropertyChanged("PricingId");
                    OnPricingIdChanged();
                }
            }
        }
        private global::System.Int32 _PricingId;
        partial void OnPricingIdChanging(global::System.Int32 value);
        partial void OnPricingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PricingDescription
        {
            get
            {
                return _PricingDescription;
            }
            set
            {
                OnPricingDescriptionChanging(value);
                ReportPropertyChanging("PricingDescription");
                _PricingDescription = StructuralObject.SetValidValue(value, true, "PricingDescription");
                ReportPropertyChanged("PricingDescription");
                OnPricingDescriptionChanged();
            }
        }
        private global::System.String _PricingDescription;
        partial void OnPricingDescriptionChanging(global::System.String value);
        partial void OnPricingDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Pricing_Master_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Pricing_Master_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Pricing_Master_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Pricing_Master_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_Pricing_Master_Domain_Master", "Domain_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_PricingDetails_Pricing_Master", "PricingDetail")]
        public EntityCollection<PricingDetail> PricingDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PricingDetail>("cms_venomitModel.FK_PricingDetails_Pricing_Master", "PricingDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PricingDetail>("cms_venomitModel.FK_PricingDetails_Pricing_Master", "PricingDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="PricingDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PricingDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PricingDetail object.
        /// </summary>
        /// <param name="pricingDetailsId">Initial value of the PricingDetailsId property.</param>
        /// <param name="pricingId">Initial value of the PricingId property.</param>
        public static PricingDetail CreatePricingDetail(global::System.Int32 pricingDetailsId, global::System.Int32 pricingId)
        {
            PricingDetail pricingDetail = new PricingDetail();
            pricingDetail.PricingDetailsId = pricingDetailsId;
            pricingDetail.PricingId = pricingId;
            return pricingDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingDetailsId
        {
            get
            {
                return _PricingDetailsId;
            }
            set
            {
                if (_PricingDetailsId != value)
                {
                    OnPricingDetailsIdChanging(value);
                    ReportPropertyChanging("PricingDetailsId");
                    _PricingDetailsId = StructuralObject.SetValidValue(value, "PricingDetailsId");
                    ReportPropertyChanged("PricingDetailsId");
                    OnPricingDetailsIdChanged();
                }
            }
        }
        private global::System.Int32 _PricingDetailsId;
        partial void OnPricingDetailsIdChanging(global::System.Int32 value);
        partial void OnPricingDetailsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingId
        {
            get
            {
                return _PricingId;
            }
            set
            {
                OnPricingIdChanging(value);
                ReportPropertyChanging("PricingId");
                _PricingId = StructuralObject.SetValidValue(value, "PricingId");
                ReportPropertyChanged("PricingId");
                OnPricingIdChanged();
            }
        }
        private global::System.Int32 _PricingId;
        partial void OnPricingIdChanging(global::System.Int32 value);
        partial void OnPricingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_PricingDetails_Pricing_Master", "Pricing_Master")]
        public Pricing_Master Pricing_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pricing_Master>("cms_venomitModel.FK_PricingDetails_Pricing_Master", "Pricing_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pricing_Master>("cms_venomitModel.FK_PricingDetails_Pricing_Master", "Pricing_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pricing_Master> Pricing_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pricing_Master>("cms_venomitModel.FK_PricingDetails_Pricing_Master", "Pricing_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pricing_Master>("cms_venomitModel.FK_PricingDetails_Pricing_Master", "Pricing_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static Service CreateService(global::System.Int32 serviceId, global::System.Int32 domainId)
        {
            Service service = new Service();
            service.ServiceId = serviceId;
            service.DomainId = domainId;
            return service;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                if (_ServiceId != value)
                {
                    OnServiceIdChanging(value);
                    ReportPropertyChanging("ServiceId");
                    _ServiceId = StructuralObject.SetValidValue(value, "ServiceId");
                    ReportPropertyChanged("ServiceId");
                    OnServiceIdChanged();
                }
            }
        }
        private global::System.Int32 _ServiceId;
        partial void OnServiceIdChanging(global::System.Int32 value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceDescription
        {
            get
            {
                return _ServiceDescription;
            }
            set
            {
                OnServiceDescriptionChanging(value);
                ReportPropertyChanging("ServiceDescription");
                _ServiceDescription = StructuralObject.SetValidValue(value, true, "ServiceDescription");
                ReportPropertyChanged("ServiceDescription");
                OnServiceDescriptionChanged();
            }
        }
        private global::System.String _ServiceDescription;
        partial void OnServiceDescriptionChanging(global::System.String value);
        partial void OnServiceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Services_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Services_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Services_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Services_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_Services_Domain_Master", "Domain_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Slider_Details")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Slider_Details : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Slider_Details object.
        /// </summary>
        /// <param name="sliderDetailsId">Initial value of the SliderDetailsId property.</param>
        /// <param name="sliderId">Initial value of the SliderId property.</param>
        public static Slider_Details CreateSlider_Details(global::System.Int32 sliderDetailsId, global::System.Int32 sliderId)
        {
            Slider_Details slider_Details = new Slider_Details();
            slider_Details.SliderDetailsId = sliderDetailsId;
            slider_Details.SliderId = sliderId;
            return slider_Details;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SliderDetailsId
        {
            get
            {
                return _SliderDetailsId;
            }
            set
            {
                if (_SliderDetailsId != value)
                {
                    OnSliderDetailsIdChanging(value);
                    ReportPropertyChanging("SliderDetailsId");
                    _SliderDetailsId = StructuralObject.SetValidValue(value, "SliderDetailsId");
                    ReportPropertyChanged("SliderDetailsId");
                    OnSliderDetailsIdChanged();
                }
            }
        }
        private global::System.Int32 _SliderDetailsId;
        partial void OnSliderDetailsIdChanging(global::System.Int32 value);
        partial void OnSliderDetailsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SliderId
        {
            get
            {
                return _SliderId;
            }
            set
            {
                OnSliderIdChanging(value);
                ReportPropertyChanging("SliderId");
                _SliderId = StructuralObject.SetValidValue(value, "SliderId");
                ReportPropertyChanged("SliderId");
                OnSliderIdChanged();
            }
        }
        private global::System.Int32 _SliderId;
        partial void OnSliderIdChanging(global::System.Int32 value);
        partial void OnSliderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Slider_Details_Slider_Master", "Slider_Master")]
        public Slider_Master Slider_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Slider_Master>("cms_venomitModel.FK_Slider_Details_Slider_Master", "Slider_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Slider_Master>("cms_venomitModel.FK_Slider_Details_Slider_Master", "Slider_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Slider_Master> Slider_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Slider_Master>("cms_venomitModel.FK_Slider_Details_Slider_Master", "Slider_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Slider_Master>("cms_venomitModel.FK_Slider_Details_Slider_Master", "Slider_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Slider_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Slider_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Slider_Master object.
        /// </summary>
        /// <param name="sliderId">Initial value of the SliderId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static Slider_Master CreateSlider_Master(global::System.Int32 sliderId, global::System.Int32 domainId)
        {
            Slider_Master slider_Master = new Slider_Master();
            slider_Master.SliderId = sliderId;
            slider_Master.DomainId = domainId;
            return slider_Master;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SliderId
        {
            get
            {
                return _SliderId;
            }
            set
            {
                if (_SliderId != value)
                {
                    OnSliderIdChanging(value);
                    ReportPropertyChanging("SliderId");
                    _SliderId = StructuralObject.SetValidValue(value, "SliderId");
                    ReportPropertyChanged("SliderId");
                    OnSliderIdChanged();
                }
            }
        }
        private global::System.Int32 _SliderId;
        partial void OnSliderIdChanging(global::System.Int32 value);
        partial void OnSliderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SliderImage
        {
            get
            {
                return _SliderImage;
            }
            set
            {
                OnSliderImageChanging(value);
                ReportPropertyChanging("SliderImage");
                _SliderImage = StructuralObject.SetValidValue(value, true, "SliderImage");
                ReportPropertyChanged("SliderImage");
                OnSliderImageChanged();
            }
        }
        private global::System.String _SliderImage;
        partial void OnSliderImageChanging(global::System.String value);
        partial void OnSliderImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Slider_Master_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Slider_Master_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Slider_Master_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Slider_Master_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_Slider_Master_Domain_Master", "Domain_Master", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Slider_Details_Slider_Master", "Slider_Details")]
        public EntityCollection<Slider_Details> Slider_Details
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slider_Details>("cms_venomitModel.FK_Slider_Details_Slider_Master", "Slider_Details");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slider_Details>("cms_venomitModel.FK_Slider_Details_Slider_Master", "Slider_Details", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="Testimonial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Testimonial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Testimonial object.
        /// </summary>
        /// <param name="testimonialId">Initial value of the TestimonialId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static Testimonial CreateTestimonial(global::System.Int32 testimonialId, global::System.Int32 domainId)
        {
            Testimonial testimonial = new Testimonial();
            testimonial.TestimonialId = testimonialId;
            testimonial.DomainId = domainId;
            return testimonial;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestimonialId
        {
            get
            {
                return _TestimonialId;
            }
            set
            {
                if (_TestimonialId != value)
                {
                    OnTestimonialIdChanging(value);
                    ReportPropertyChanging("TestimonialId");
                    _TestimonialId = StructuralObject.SetValidValue(value, "TestimonialId");
                    ReportPropertyChanged("TestimonialId");
                    OnTestimonialIdChanged();
                }
            }
        }
        private global::System.Int32 _TestimonialId;
        partial void OnTestimonialIdChanging(global::System.Int32 value);
        partial void OnTestimonialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true, "Author");
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_Testimonials_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Testimonials_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Testimonials_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_Testimonials_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_Testimonials_Domain_Master", "Domain_Master", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="User_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User_Master object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static User_Master CreateUser_Master(global::System.Int32 userId)
        {
            User_Master user_Master = new User_Master();
            user_Master.UserId = userId;
            return user_Master;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value, "UserType");
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _UserType;
        partial void OnUserTypeChanging(Nullable<global::System.Int32> value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true, "ModifiedBy");
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cms_venomitModel", Name="WhyWe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WhyWe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WhyWe object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        public static WhyWe CreateWhyWe(global::System.Int32 id, global::System.Int32 domainId)
        {
            WhyWe whyWe = new WhyWe();
            whyWe.Id = id;
            whyWe.DomainId = domainId;
            return whyWe;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value, "DomainId");
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("cms_venomitModel", "FK_WhyWe_Domain_Master", "Domain_Master")]
        public Domain_Master Domain_Master
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_WhyWe_Domain_Master", "Domain_Master").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_WhyWe_Domain_Master", "Domain_Master").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain_Master> Domain_MasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain_Master>("cms_venomitModel.FK_WhyWe_Domain_Master", "Domain_Master");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain_Master>("cms_venomitModel.FK_WhyWe_Domain_Master", "Domain_Master", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
